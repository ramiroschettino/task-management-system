services:
  postgres:
    image: postgres:15-alpine
    container_name: taskforge_postgres
    environment:
      POSTGRES_USER: taskforge
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: taskforge
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-dbs.sql:/docker-entrypoint-initdb.d/init-multiple-dbs.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskforge"]
      interval: 5s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: taskforge_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: taskforge_kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  api-gateway:
    build: ./api-gateway/api-gateway
    container_name: taskforge_api_gateway
    ports:
      - "8085:8080"
    depends_on:
      auth-service:
        condition: service_started
      task-service:
        condition: service_started
      user-service:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  auth-service:
    build: ./auth-service/auth-service
    container_name: taskforge_auth_service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8081
      - SERVER_SERVLET_CONTEXT_PATH=/auth
    depends_on:
      - postgres

  task-service:
    build: ./task-service/task-service
    container_name: taskforge_task_service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8082
      - MANAGEMENT_SERVER_PORT=8082
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - postgres
      - kafka

  user-service:
    build: ./user-service/user-service
    container_name: taskforge_user_service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8083
      - MANAGEMENT_SERVER_PORT=8083
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data: