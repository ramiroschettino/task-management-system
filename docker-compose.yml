services:
  # ---- Base de Datos ----
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: taskforge
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: taskforge
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskforge"]
      interval: 5s
      timeout: 5s
      retries: 5

  # ---- Kafka ----
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 3

  # ---- Microservicios ----
  api-gateway:
    build: ./api-gateway/api-gateway
    ports:
      - "8085:8080"
    depends_on:
      - auth-service
      - task-service
      - user-service

  auth-service:
    build: ./auth-service/auth-service
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  task-service:
    build: ./task-service/task-service
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  user-service:
    build: ./user-service/user-service
    ports:
      - "8083:8083"
    depends_on:
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker

volumes:
  postgres_data:
